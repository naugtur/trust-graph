exports[`assertion schema > rejects assertion missing both fields in flaw subject 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0/claim",
      "schemaPath": "#/definitions/claim/type",
      "keyword": "type",
      "params": {
        "type": "object"
      },
      "message": "must be object"
    }
  ]
}
`;

exports[`assertion schema > rejects assertion missing fields in assertion subject 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0/claim",
      "schemaPath": "#/definitions/claim/type",
      "keyword": "type",
      "params": {
        "type": "object"
      },
      "message": "must be object"
    }
  ]
}
`;

exports[`assertion schema > rejects assertion missing issuerSpecificID in dependency subject 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0",
      "schemaPath": "#/definitions/issuerIdentity/required",
      "keyword": "required",
      "params": {
        "missingProperty": "issuerSpecificID"
      },
      "message": "must have required property 'issuerSpecificID'"
    }
  ]
}
`;

exports[`assertion schema > rejects assertion missing pkg name in dependency subject 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0/claim",
      "schemaPath": "#/definitions/claim/type",
      "keyword": "type",
      "params": {
        "type": "object"
      },
      "message": "must be object"
    }
  ]
}
`;

exports[`assertion schema > rejects assertion without required fields 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0",
      "schemaPath": "#/definitions/issuerIdentity/required",
      "keyword": "required",
      "params": {
        "missingProperty": "issuerSpecificID"
      },
      "message": "must have required property 'issuerSpecificID'"
    }
  ]
}
`;

exports[`assertion schema > rejects claim with invalid type 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0/claim/type",
      "schemaPath": "#/definitions/claim/properties/type/enum",
      "keyword": "enum",
      "params": {
        "allowedValues": [
          "endorse",
          "dispute",
          "neutral"
        ]
      },
      "message": "must be equal to one of the allowed values"
    }
  ]
}
`;

exports[`assertion schema > rejects claim without type 1`] = `
{
  "errors": [
    {
      "instancePath": "/assertions/0/claim",
      "schemaPath": "#/definitions/claim/required",
      "keyword": "required",
      "params": {
        "missingProperty": "type"
      },
      "message": "must have required property 'type'"
    }
  ]
}
`;

exports[`assertion schema > rejects empty object 1`] = `
{
  "errors": [
    {
      "instancePath": "",
      "schemaPath": "#/required",
      "keyword": "required",
      "params": {
        "missingProperty": "assertions"
      },
      "message": "must have required property 'assertions'"
    }
  ]
}
`;

exports[`assertion schema > rejects missing assertions array 1`] = `
{
  "errors": [
    {
      "instancePath": "",
      "schemaPath": "#/required",
      "keyword": "required",
      "params": {
        "missingProperty": "assertions"
      },
      "message": "must have required property 'assertions'"
    }
  ]
}
`;
